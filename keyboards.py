from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder


def get_menu(lang, is_admin=False):
    builder = ReplyKeyboardBuilder()
    if lang == "ru":
        builder.row(
            types.KeyboardButton(text="–°—Ç–∞—Ç—É—Å –ù–æ–¥—ã"),
            types.KeyboardButton(text="–°—Ç–∞—Ç—É—Å –°–µ—Ç–∏")
        )
        builder.row(
            types.KeyboardButton(text="–ó–∞–ø—É—Å–∫ –ù–æ–¥—ã"),
            types.KeyboardButton(text="–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Namada")
        )
        builder.row(
            types.KeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        )
    elif lang == "ua":
        builder.row(
            types.KeyboardButton(text="–°—Ç–∞—Ç—É—Å –ù–æ–¥–∏"),
            types.KeyboardButton(text="–°—Ç–∞—Ç—É—Å –ú–µ—Ä–µ–∂—ñ")
        )
        builder.row(
            types.KeyboardButton(text="–ó–∞–ø—É—Å–∫ –ù–æ–¥–∏"),
            types.KeyboardButton(text="–ë—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ Namada")
        )
        builder.row(
            types.KeyboardButton(text="–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
        )
    else:
        builder.row(
            types.KeyboardButton(text="Node Status"),
            types.KeyboardButton(text="Network Status")
        )
        builder.row(
            types.KeyboardButton(text="Run a Node"),
            types.KeyboardButton(text="Explore Namada")
        )
        builder.row(
            types.KeyboardButton(text="Settings")
        )
    if is_admin:
        builder.row(
            types.KeyboardButton(text="Mailing")
        )

    return builder.as_markup(resize_keyboard=True)


# lang param is not used
def get_networks(lang):
    builder = ReplyKeyboardBuilder()
    builder.row(
        types.KeyboardButton(text="Shielded Expedition"),
    )
    builder.row(
        types.KeyboardButton(text="Campfire Testnet"),
    )
    builder.row(
        types.KeyboardButton(text="Namada Mainnet (Upcoming)")
    )
    return builder.as_markup(resize_keyboard=True)


# lang param is not used
def get_language(lang):
    builder = ReplyKeyboardBuilder()
    builder.row(
        types.KeyboardButton(text="English üá¨üáß"),
    )
    builder.row(
        types.KeyboardButton(text="Ukrainian üá∫üá¶"),
    )
    builder.row(
        types.KeyboardButton(text="Russian üá∑üá∫")
    )
    return builder.as_markup(resize_keyboard=True)
    

def get_settings(lang):
    builder = ReplyKeyboardBuilder()
    if lang == "ru":
        builder.row(
            types.KeyboardButton(text="Alert –ù–æ–¥—ã"),
            types.KeyboardButton(text="Alert –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è"),
            types.KeyboardButton(text="Alert –°–µ—Ç–∏"),
        )
        builder.row(
            types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"),
            types.KeyboardButton(text="–Ø–∑—ã–∫")
        )
        builder.row(
            types.KeyboardButton(text="–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏")
        )
        builder.row(
            types.KeyboardButton(text="–ù–∞–∑–∞–¥")
        )
    elif lang == "ua":
        builder.row(
            types.KeyboardButton(text="Alert –ù–æ–¥–∏"),
            types.KeyboardButton(text="Alert –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è"),
            types.KeyboardButton(text="Alert –ú–µ—Ä–µ–∂—ñ")
        )
        builder.row(
            types.KeyboardButton(text="–í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É"),
            types.KeyboardButton(text="–ú–æ–≤–∞")
        )
        builder.row(
            types.KeyboardButton(text="–ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏")
        )
        builder.row(
            types.KeyboardButton(text="–ù–∞–∑–∞–¥")
        )
    else:
        builder.row(
            types.KeyboardButton(text="Node Alert"),
            types.KeyboardButton(text="Governance Alert"),
            types.KeyboardButton(text="Network Alert"),
        )
        builder.row(
            types.KeyboardButton(text="Remove Node"),
            types.KeyboardButton(text="Language")
        )
        builder.row(
            types.KeyboardButton(text="Contact Us")
        )
        builder.row(
            types.KeyboardButton(text="Back")
        )
    return builder.as_markup(resize_keyboard=True)


def get_yes_no(lang):
    builder = ReplyKeyboardBuilder()
    if lang == "ru":
        builder.row(
            types.KeyboardButton(text="–î–∞"),
        )
        builder.row(
            types.KeyboardButton(text="–ù–µ—Ç"),
        )
    elif lang == "ua":
        builder.row(
            types.KeyboardButton(text="–¢–∞–∫"),
        )
        builder.row(
            types.KeyboardButton(text="–ù—ñ"),
        )
    else:
        builder.row(
            types.KeyboardButton(text="Yes"),
        )
        builder.row(
            types.KeyboardButton(text="No"),
        )
    return builder.as_markup(resize_keyboard=True)


def get_back(lang):
    builder = ReplyKeyboardBuilder()
    if lang == "ru":
        builder.row(
            types.KeyboardButton(text="–ù–∞–∑–∞–¥"),
        )
    elif lang == "ua":
        builder.row(
            types.KeyboardButton(text="–ù–∞–∑–∞–¥"),
        )
    else:
        builder.row(
            types.KeyboardButton(text="Back"),
        )
    return builder.as_markup(resize_keyboard=True)
